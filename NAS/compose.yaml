services:
#------------- Auxiliary
  # heimdall:
  #   container_name: heimdall
  #   image: lscr.io/linuxserver/heimdall:latest
  #   environment:
  #     - PUID=1026
  #     - PGID=100
  #     - TZ=America/Chicago
  #   volumes:
  #     - ${CONFIG_ROOT:?}/heimdall:/config
  #   expose:
  #     - "80"
  #   restart: unless-stopped
  #   networks:
  #     - internal

  postgres:
    container_name: postgres
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?}
      - POSTGRES_USER=${POSTGRES_USER:?}
      - PGDATA=/data/postgres
    expose:
      - "5432"
    volumes:
      - postgres:/data/postgres
    restart: unless-stopped
    networks:
      - internal

  adminer:
    container_name: adminer
    image: adminer:latest
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    expose:
      - "8080"
    restart: unless-stopped
    networks:
      - internal
    depends_on:
      - postgres

  omegabrr: # This service defines filters for autobrr based on sonarr/radarr
    container_name: omegabrr
    image: ghcr.io/autobrr/omegabrr:latest
    environment:
      - PUID=1026
      - PGID=100
      - TZ=America/Chicago
    expose:
      - "7441"
    volumes:
      - ${CONFIG_ROOT:?}/omegabrr:/config
    networks:
      - internal

#------------- Media Acquisition
  autobrr:
    container_name: autobrr
    image: ghcr.io/autobrr/autobrr:latest
    expose:
      - "7474"
    volumes:
      - ${CONFIG_ROOT:?}/autobrr:/config
    environment:
      - PUID=1026
      - PGID=100
      - TZ=America/Chicago
    networks:
      - internal
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      - PUID=1026
      - PGID=100
      - TZ=America/Chicago
      - AUTO_UPDATE=true
    expose:
      - "9696"
    volumes:
      - ${CONFIG_ROOT:?}/prowlarr:/config
      - ${BACKUP_ROOT:?}/Prowlarr:/config/Backups
    networks:
      - internal
    restart: unless-stopped

  radarr:
    container_name: radarr
    image: ghcr.io/linuxserver/radarr
    environment:
      - PUID=1026
      - PGID=100
      - TZ=America/Chicago
      - CROSS_SEED_HOST=${CROSS_SEED_HOST:?}
      - CROSS_SEED_API=${CROSS_SEED_API:?}
    expose:
      - "7878"
    volumes:
      - ${CONFIG_ROOT:?}/Radarr:/config
      - ${BACKUP_ROOT:?}/Radarr:/config/Backups
      - ${MEDIA_ROOT:?}:/mnt/union
      - ${SCRIPTS_ROOT:?}:/scripts
      - sys_downloads:/downloads
    healthcheck:
      test: ls /downloads || exit 1
      interval: 1m
      timeout: 15s
      retries: 3
      start_period: 15s
    networks:
      - internal
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    image: ghcr.io/linuxserver/sonarr
    environment:
      - PUID=1026
      - PGID=100
      - TZ=America/Chicago
      - CROSS_SEED_HOST=${CROSS_SEED_HOST:?}
      - CROSS_SEED_API=${CROSS_SEED_API:?}
    expose:
      - "8989"
    volumes:
      - ${CONFIG_ROOT:?}/Sonarr:/config
      - ${SCRIPTS_ROOT:?}:/scripts
      - sys_downloads:/downloads
      - ${BACKUP_ROOT:?}/Sonarr:/config/Backups
      - ${MEDIA_ROOT:?}:/mnt/union
    healthcheck:
      test: ls /downloads || exit 1
      interval: 1m
      timeout: 15s
      retries: 3
      start_period: 15s
    networks:
      - internal
    restart: unless-stopped

#------------- Reverse Proxy
  authelia:
    container_name: authelia
    image: authelia/authelia:latest
    environment:
      - TZ=America/Chicago
    expose:
      - "9091"
    volumes:
      - ${CONFIG_ROOT:?}/authelia:/config
    networks:
      - internal
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: linuxserver/swag:latest
    environment:
      - PUID=1026
      - PGID=100
      - TZ=America/Chicago
      - URL=ssmedia.me
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - PROPAGATION=30
      - ONLY_SUBDOMAINS=false
    ports:
      - "4433:443"
      - "88:80"
    volumes:
      - ${CONFIG_ROOT:?}/nginx:/config
    networks:
      - internal
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: curl localhost:80/health-check || exit 1
      interval: 60s
      timeout: 3s
    restart: unless-stopped


volumes:
  sys_downloads:
    driver: rclone
    driver_opts:
      remote: "sys:/data1/kingofzeal/torrentData/"
      allow_other: "true"
      poll_interval: 0
#   netdatalib:
#   netdatacache:
  pgadmin:
  postgres:

networks:
  internal:
    driver: bridge
